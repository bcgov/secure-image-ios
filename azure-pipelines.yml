# NOTES
#
# In the Azure DevOps Web IDe you must set the following pipeline variables:
#   - AzureStorageAccountName
#   - AzureSubscriptionID
# They will be used by a task to copy the build artifact(s) to an azure blob storage for easy
# downloading or further processing.
#
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode
#

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: Xcode@5
  inputs:
    actions: 'archive'
    scheme: 'SecureImage'
    sdk: 'iphoneos'
    configuration: 'Release'
    xcWorkspacePath: '**/SecureImage.xcworkspace'
    xcodeVersion: 'default' # Options: 8, 9, 10, default, specifyPath
    args: '-xcconfig ci.xcconfig -archivePath $(Build.BinariesDirectory)/out/SecureImage'
    # artifactsDirectory: '$(Build.ArtifactStagingDirectory)/SecureImage'
- task: CopyFiles@3
  inputs:
    SourceFolder: '$(Build.BinariesDirectory)'
    Contents: 'options.plist'
    TargetFolder: '$(Build.BinariesDirectory)/out/'
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)/out'
    includeRootFolder: false # don't include the /out portion of the path
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/SecureImage-$(Build.BuildId).zip'
    replaceExistingArchive: true
- task: AzureCLI@1
  inputs:
    azureSubscription: '$(AzureSubscriptionID)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob upload --account-name $(AzureStorageAccountName) --container-name "artifacts" --name "SecureImage-$(Build.BuildId).zip" --file $(Build.ArtifactStagingDirectory)/SecureImage-$(Build.BuildId).zip'