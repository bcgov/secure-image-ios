# NOTES
#
# In the Azure DevOps Web IDE:
# 1) Set the following pipeline variables:
#   - AzureStorageAccountName
#   - AzureSubscriptionID
# 2) In the project settings you must create a `service connection` of type `Azure Resource Manager`
#    call it `SomethingServiceConnection` and reference by name in in the AzureCLI tasks
#    `connectedServiceNameARM` input.
#
# These will be used by the AzureCLI@2 to copy the build artifact(s) to an Azure blob storage for easy
# downloading or further processing.
#
# Add steps that install certificates, test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xcode
#

trigger:
- master

pool:
  vmImage: 'macos-latest'

steps:
- task: InstallAppleCertificate@2
  inputs:
    certSecureFile: 'enterprise.p12'
    certPwd: '$(P12password)'
    keychain: 'temp'
- task: InstallAppleProvisioningProfile@1
  inputs:
    provisioningProfileLocation: 'secureFiles'
    provProfileSecureFile: 'SecureImage_InHouse.mobileprovision'
    removeProfile: true
- task: CmdLine@2
  displayName: Bump build number
  timeoutInMinutes: 1
  inputs:
    script: |
        ./scripts/az-set-build-no.sh
- task: Xcode@5
  displayName: Build
  timeoutInMinutes: 15
  inputs:
    actions: 'build'
    scheme: 'SecureImage'
    sdk: 'iphoneos'
    configuration: 'Release'
    xcWorkspacePath: '**/SecureImage.xcworkspace'
    xcodeVersion: 'default'
    packageApp: true
    signingOption: 'default'
    provisioningProfileUuid: '60b7a024-04c8-4058-bf28-3e4c65d7454b'
    exportMethod: 'enterprise'
    exportOptions: 'plist'
    exportOptionsPlist: 'options.plist'
    archivePath: '$(Build.ArtifactStagingDirectory)/pack'
    args: '-xcconfig release.xcconfig'
- task: CopyFiles@2
  displayName: Copy IPA file
  inputs:
    contents: 'SecureImage.ipa'
    sourceFolder: '$(Build.SourcesDirectory)/output/$(SDK)/$(Configuration)'
    targetFolder: '$(Build.ArtifactStagingDirectory)'
- task: AzureCLI@1
  displayName: Upload IPA to Azure storage
  timeoutInMinutes: 1
  inputs:
    connectedServiceNameARM: 'FullboarServiceConnection'
    azureSubscription: '$(AzureSubscriptionID)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob upload --account-name $(AzureStorageAccountName) --container-name "artifacts" --name "SecureImage-${BUILD_BUILDID}.ipa" --file "$(Build.ArtifactStagingDirectory)/SecureImage.ipa"'
- task: CopyFiles@2
  displayName: Copy options (plist) file
  timeoutInMinutes: 1
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'options.plist'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/pack'
- task: ArchiveFiles@2
  displayName: Create archive
  timeoutInMinutes: 1
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/pack'
    includeRootFolder: false # don't include the /pack portion of the path
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/SecureImage-${BUILD_BUILDID}.zip'
    replaceExistingArchive: true
- task: AzureCLI@1
  displayName: Upload archive to Azure storage
  timeoutInMinutes: 1
  inputs:
    connectedServiceNameARM: 'FullboarServiceConnection'
    azureSubscription: '$(AzureSubscriptionID)'
    scriptLocation: 'inlineScript'
    inlineScript: 'az storage blob upload --account-name $(AzureStorageAccountName) --container-name "artifacts" --name "SecureImage-${BUILD_BUILDID}.zip" --file $(Build.ArtifactStagingDirectory)/SecureImage-${BUILD_BUILDID}.zip'